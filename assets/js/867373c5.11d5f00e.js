"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5067],{9994:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return h},default:function(){return f},frontMatter:function(){return d},metadata:function(){return m},toc:function(){return v}});var r=n(7462),a=n(3366),o=n(7294),i=n(3905),s=n(1736),c=n(3136),l=function(){var e=(0,o.useRef)(),t=(0,o.useRef)(),n=(0,o.useState)(),r=n[0],a=n[1],i=function(){e.current.resize(400,300)};return(0,o.useEffect)((function(){void 0!==e.current&&void 0!==t.current&&void 0!==r&&r.setData(u)}),[u,r]),(0,o.useEffect)((function(){e.current=(0,c.C2)(t.current,{width:400,height:300});var n=e.current.addAreaSeries();return n.setData(u),a(n),window.addEventListener("resize",i),function(){window.removeEventListener("resize",i),e.current.remove(),e.current=void 0}}),[u]),o.createElement("div",{ref:t})},u=[{time:"2018-12-22",value:32.51},{time:"2018-12-23",value:31.11},{time:"2018-12-24",value:27.02},{time:"2018-12-25",value:27.32},{time:"2018-12-26",value:25.17},{time:"2018-12-27",value:28.89},{time:"2018-12-28",value:25.46},{time:"2018-12-29",value:23.92},{time:"2018-12-30",value:22.68},{time:"2018-12-31",value:22.67}];var p=["components"],d={id:"react",title:"How to use Lightweight Charts with React",sidebar_position:0},h=void 0,m={unversionedId:"tutorials/react",id:"tutorials/react",title:"How to use Lightweight Charts with React",description:"The following only describes a relatively simple example that only renders an areaSeries that could be tweaked to render any other type of series.",source:"@site/docs/tutorials/react.mdx",sourceDirName:"tutorials",slug:"/tutorials/react",permalink:"/lightweight-charts/docs/tutorials/react",tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"react",title:"How to use Lightweight Charts with React",sidebar_position:0},sidebar:"docsSidebar",previous:{title:"From v2 to v3",permalink:"/lightweight-charts/docs/migrations/from-v2-to-v3"},next:{title:"How to wrap Lightweight Charts into parent/children components",permalink:"/lightweight-charts/docs/tutorials/react-complex-example"}},v=[{value:"Setup your React project - using Parcel",id:"setup-your-react-project---using-parcel",children:[],level:3},{value:"Setup your React project - without a project builder",id:"setup-your-react-project---without-a-project-builder",children:[],level:3},{value:"How to create your own Charting React component",id:"how-to-create-your-own-charting-react-component",children:[],level:3}],w={toc:v};function f(e){var t=e.components,n=(0,a.Z)(e,p);return(0,i.kt)("wrapper",(0,r.Z)({},w,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The following only describes a relatively simple example that only renders an ",(0,i.kt)("a",{parentName:"p",href:"/lightweight-charts/docs/series-types#area"},"areaSeries")," that could be tweaked to render any other type of ",(0,i.kt)("a",{parentName:"p",href:"/lightweight-charts/docs/series-types"},"series"),"."),(0,i.kt)("p",{parentName:"div"},"For a more complete scenario where you could wrap Lightweight Chart into a component having sub components, please consult this ",(0,i.kt)("a",{parentName:"p",href:"./react-complex-example"},"example"),"."))),(0,i.kt)("p",null,"On this page you will learn how to easily use Lightweight Charts with React."),(0,i.kt)("p",null,"The below procedure will use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/brandiqa/react-parcel-starter"},"Parcel")," but the dependencies used in package.json will also be provided to start from scratch an empty project."),(0,i.kt)("h3",{id:"setup-your-react-project---using-parcel"},"Setup your React project - using Parcel"),(0,i.kt)("p",null,"Feel free to reuse the setup details provided by Parcel or to just copy/paste the following"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"git clone git@github.com:brandiqa/react-parcel-starter.git lwc-react\ncd lwc-react\nnpm install\n")),(0,i.kt)("p",null,"To run your project simply"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"// The following will create a web page accessible by default on http://localhost:1234/\nnpm start\n")),(0,i.kt)("h3",{id:"setup-your-react-project---without-a-project-builder"},"Setup your React project - without a project builder"),(0,i.kt)("p",null,"If for any reason you don't want to rely on a specific builder to construct your project and are only interested in doing things manually you will only need a few dependencies."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'// package.json\n...\n"dependencies": {\n    "react": "^16.13.1",\n    "react-dom": "^16.13.1"\n},\n"devDependencies": {\n    "@babel/core": "^7.10.2",\n    "@babel/preset-env": "^7.10.2",\n    "@babel/preset-react": "^7.10.1",\n}\n')),(0,i.kt)("p",null,"and then"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npm install\n")),(0,i.kt)("h3",{id:"how-to-create-your-own-charting-react-component"},"How to create your own Charting React component"),(0,i.kt)("p",null,"The example ",(0,i.kt)("em",{parentName:"p"},"React component")," on this page may not fit your requirements completely. Creating a general purpose declarative wrapper for Lightweight Chart's imperative API is a challenge, but hopefully you can adapt this example to your use case."),(0,i.kt)(s.Z,{className:"language-jsx",mdxType:"CodeBlock"},"import { createChart } from 'lightweight-charts';\nimport React, { useEffect, useRef, useState } from 'react';\n\nexport const ChartComponent = () => {\n\tconst chart = useRef();\n\tconst chartContainerRef = useRef();\n\n\tconst [series, setSeries] = useState();\n\n\tconst handleResize = () => {\n\t\tchart.current.resize(400, 300);\n\t};\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (chart.current !== undefined && chartContainerRef.current !== undefined && series !== undefined) {\n\t\t\t\tseries.setData(data);\n\t\t\t}\n\t\t},\n\t\t[data, series]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tchart.current = createChart(chartContainerRef.current, {\n\t\t\t\twidth: 400,\n\t\t\t\theight: 300,\n\t\t\t});\n\n\t\t\tconst newSeries = chart.current.addAreaSeries();\n\t\t\tnewSeries.setData(data);\n\t\t\tsetSeries(newSeries);\n\n\t\t\twindow.addEventListener('resize', handleResize);\n\t\t\treturn () => {\n\t\t\t\twindow.removeEventListener('resize', handleResize);\n\n\t\t\t\tchart.current.remove();\n\t\t\t\tchart.current = undefined;\n\t\t\t};\n\t\t},\n\t\t[data]\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tref={chartContainerRef}\n\t\t/>\n\t);\n};\n\nconst data = [\n\t{ time: '2018-12-22', value: 32.51 },\n\t{ time: '2018-12-23', value: 31.11 },\n\t{ time: '2018-12-24', value: 27.02 },\n\t{ time: '2018-12-25', value: 27.32 },\n\t{ time: '2018-12-26', value: 25.17 },\n\t{ time: '2018-12-27', value: 28.89 },\n\t{ time: '2018-12-28', value: 25.46 },\n\t{ time: '2018-12-29', value: 23.92 },\n\t{ time: '2018-12-30', value: 22.68 },\n\t{ time: '2018-12-31', value: 22.67 },\n];\n\nexport function App() {\n\treturn (\n\t\t<ChartComponent data={data}></ChartComponent>\n\t);\n}\n"),(0,i.kt)("p",null,"and you'll have a reusable component that could then be enhanced, tweaked to meet your needs, adding properties and even functionalities."),(0,i.kt)("p",null,"If you've successfully followed all the steps you should see something similar to"),(0,i.kt)(l,{mdxType:"ChartComponent"}))}f.isMDXComponent=!0}}]);